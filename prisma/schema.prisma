// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  image String
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt()

  order Order[]
}

model Product {
  id String @id @default(uuid())
  name String
  description String
  image String
  price Float
  stock Int
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  orderItems OrderItem[]
}


model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  CANCELLED
}


model Order {
  id                String         @id @default(uuid())
  user              User           @relation(fields: [userId], references: [id])
  userId            String
  orderItems        OrderItem[]
  deliveryAddress   String
  paymentIntentId   String
  paymentDetails    Json
  paymentStatus     PaymentStatus
  totalPrice        Float
  deliveryStatus    DeliveryStatus
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt()
}
